// Copyright 2015 Palantir Technologies, Inc. All rights reserved.
// Licensed under the Apache License, Version 2.0.

@import "../../common/mixins";
@import "../../common/mixins-hipa";
@import "../../common/variables";
@import "../../common/variables-hipa";
@import "../progress-bar/common";

$button-border-width: 1px !default;
$button-padding-x: $hipa-grid-size * 2.5 !default;
$button-padding-tight-x: $hipa-grid-size !default;
$button-padding: $hipa-grid-size * 0.5 $button-padding-x !default;
$button-padding-small: $hipa-grid-size * 0.5 $button-padding-x !default;
$button-padding-tight: $hipa-grid-size * 0.5 $button-padding-tight-x !default;
$button-padding-large: $hipa-grid-size $button-padding-x !default;
$button-icon-spacing: $hipa-grid-size / 2 !default;
$button-icon-spacing-large: ($pt-button-height-large - $pt-icon-size-large) / 2 !default;

/*
CSS `border` property issues:
- An element can only have one border.
- Borders can't stack with shadows.
- Borders modify the size of the element they're applied to.
- Border positioning requires the extra `box-sizing` property.

`box-shadow` doesn't have these issues, we're using it instead of `border`.
*/
$button-box-shadow:
  inset 0 0 0 $button-border-width $hipa-border-color,
  inset 0 (-$button-border-width) 0 $hipa-border-color !default;
$button-box-shadow-hover:
  inset 0 0 0 $button-border-width $hipa-border-hover-color,
  inset 0 $button-border-width 0 $hipa-border-hover-color !default;
$button-box-shadow-disabled:
  inset 0 0 0 $button-border-width $hipa-input-text-disabled,
  inset 0 $button-border-width 0 $hipa-input-text-disabled !default;
$button-intent-box-shadow:
  inset 0 0 0 $button-border-width rgba($black, 0.4),
  inset 0 (-$button-border-width) 0 rgba($black, 0.2) !default;
$button-intent-box-shadow-active:
  inset 0 0 0 $button-border-width rgba($black, 0.4),
  inset 0 1px 2px rgba($black, 0.2) !default;

/*
Overlay shadows are used for default buttons
floating on top of other elements. This way, the
shadows blend with the colors beneath it.
Switches and slider handles both use these variables.
*/
$button-box-shadow-overlay:
  0 0 0 $button-border-width rgba($black, 0.2),
  0 1px 1px rgba($black, 0.2) !default;
$button-box-shadow-overlay-active:
  0 0 0 $button-border-width rgba($black, 0.2),
  inset 0 1px 1px rgba($black, 0.1) !default;

$dark-button-box-shadow:
  0 0 0 $button-border-width rgba($black, 0.4) !default;
$dark-button-box-shadow-active:
  0 0 0 $button-border-width rgba($black, 0.6),
  inset 0 1px 2px rgba($black, 0.2) !default;
$dark-button-intent-box-shadow:
  0 0 0 $button-border-width rgba($black, 0.4) !default;
$dark-button-intent-box-shadow-active:
  0 0 0 $button-border-width rgba($black, 0.4),
  inset 0 1px 2px rgba($black, 0.2) !default;

$button-gradient: linear-gradient(to bottom, rgba($white, 0.8), rgba($white, 0)) !default;
$button-intent-gradient: linear-gradient(to bottom, rgba($white, 0.1), rgba($white, 0)) !default;
$dark-button-gradient: linear-gradient(to bottom, rgba($white, 0.05), rgba($white, 0)) !default;

$button-color-disabled: $pt-text-color-disabled !default;
$button-background-color: $light-gray5 !default;
$button-background-color-hover: $light-gray4 !default;
$button-background-color-active: $light-gray2 !default;
$button-background-color-disabled: rgba($light-gray1, 0.5) !default;
$button-background-color-active-disabled: rgba($light-gray1, 0.7) !default;
$button-intent-color-disabled: rgba($white, 0.6);
$dark-button-color-disabled: $pt-dark-text-color-disabled !default;
$dark-button-background-color: $dark-gray5 !default;
$dark-button-background-color-hover: $dark-gray4 !default;
$dark-button-background-color-active: $dark-gray2 !default;
$dark-button-background-color-disabled: rgba($dark-gray5, 0.5) !default;
$dark-button-background-color-active-disabled: rgba($dark-gray5, 0.7) !default;
$dark-button-intent-color-disabled: rgba($white, 0.3);

$minimal-button-divider-width: 1px !default;
$minimal-button-background-color: none !default;
$minimal-button-background-color-hover: rgba($gray4, 0.3) !default;
$minimal-button-background-color-active: rgba($gray2, 0.3) !default;
$dark-minimal-button-background-color: none !default;
$dark-minimal-button-background-color-hover: rgba($gray3, 0.15) !default;
$dark-minimal-button-background-color-active: rgba($gray3, 0.3) !default;

$button-outlined-width: 1px !default;
$button-outlined-border-intent-opacity: 0.6 !default;
$button-outlined-border-disabled-intent-opacity: 0.2 !default;

@mixin pt-button-base() {
  @include pt-flex-container(row, $button-icon-spacing, $inline: inline);
  align-items: center;

  border: none;
  border-radius: $hipa-border-radius;
  color: $hipa-button-text-none;
  cursor: pointer;
  font-size: $hipa-button-font-size;
  justify-content: center;
  line-height: $hipa-line-height1;
  padding: $button-padding;
  text-align: left;
  vertical-align: middle;
}

@mixin pt-button-height($height) {
  min-height: $height;
  min-width: $height;
}

@mixin pt-button-height-large() {
  @include pt-button-height($hipa-button-height-large);
  @include pt-flex-margin(row, $button-icon-spacing-large);
  padding: $button-padding-large;
}

@mixin pt-button-height-default() {
  @include pt-button-height($hipa-button-height);
  padding: $button-padding;
}

@mixin pt-button-height-small() {
  @include pt-button-height($hipa-button-height-small);
  padding: $button-padding-small;
}

@mixin pt-button-height-tight() {
  @include pt-button-height($hipa-button-height-small);
  padding: $button-padding-tight;
}

@mixin pt-button() {
  background-color: $white;
  box-shadow:
    inset 0 1px 0 0 $hipa-button-border-none,
    inset 0 -1px 0 0 $hipa-button-border-none,
    inset -1px 0 0 0 $hipa-button-border-none,
    inset 1px 0 0 0 $hipa-button-border-none;

  &[class*="-minimal"],
  &[class*="-minimal"]:hover,
  &[class*="-minimal"]:active,
  &[class*="-minimal"]:disabled {
    box-shadow: none;
  }

  &:hover {
    @include pt-button-hover();
  }

  &:active,
  &.#{$ns}-active {
    @include pt-button-active();
  }

  &:disabled,
  &.#{$ns}-disabled {
    @include pt-button-disabled();
  }
}

@mixin pt-button-hover() {
  box-shadow:
    inset 0 1px 0 0 $hipa-button-border-hover-none,
    inset 0 -1px 0 0 $hipa-button-border-hover-none,
    inset -1px 0 0 0 $hipa-button-border-hover-none,
    inset 1px 0 0 0 $hipa-button-border-hover-none;
}

@mixin pt-button-active() {
  box-shadow:
    inset 0 1px 0 0 $hipa-button-border-active-none,
    inset 0 -1px 0 0 $hipa-button-border-active-none,
    inset -1px 0 0 0 $hipa-button-border-active-none,
    inset 1px 0 0 0 $hipa-button-border-active-none;
}

@mixin pt-button-disabled() {
  box-shadow:
    inset 0 1px 0 0 $hipa-button-border-disabled-none,
    inset 0 -1px 0 0 $hipa-button-border-disabled-none,
    inset -1px 0 0 0 $hipa-button-border-disabled-none,
    inset 1px 0 0 0 $hipa-button-border-disabled-none;
  color: $hipa-button-text-disabled-none;
  cursor: not-allowed;
  outline: none;
}

@mixin pt-button-intent($default-color, $hover-color, $active-color, $disabled-color) {
  background-color: $default-color;
  color: $white;

  &:hover,
  &.#{$ns}-hover {
    background-color: $hover-color;
  }

  &:active,
  &.#{$ns}-active {
    background-color: $active-color;
  }

  &:disabled,
  &.#{$ns}-disabled {
    background-color: $disabled-color;
  }
}

@mixin pt-dark-button-intent-disabled() {
  background-image: none;
  box-shadow: none;
  color: $dark-button-intent-color-disabled;
}

@mixin pt-button-minimal() {
  background: none;
  box-shadow: none;

  &:hover {
    background: $hipa-button-minimal-bg-hover-none;
    box-shadow: none;
    text-decoration: none;
  }

  &:active,
  &.#{$ns}-active {
    background: $hipa-button-minimal-bg-active-none;
    box-shadow: none;
  }

  &:disabled,
  &.#{$ns}-disabled {
    background: none;
    color: $hipa-button-minimal-text-disabled-none;
    cursor: not-allowed;
  }

  @each $intent, $colors in $hipa-button-minimal-intents {
    &.#{$ns}-intent-#{$intent} {
      @include pt-button-minimal-intent($colors...);
    }
  }
}

@mixin pt-button-ghost() {
  background: none;
  box-shadow: none;
  color: $hipa-text-color;

  &:hover {
    background: rgba(0, 0, 0, 0.1);
    box-shadow: none;
    text-decoration: none;
  }

  &:active,
  &.#{$ns}-active {
    background: rgba(0, 0, 0, 0.2);
    box-shadow: none;
  }

  &:disabled,
  &.#{$ns}-disabled {
    background: none;
    color: $hipa-button-minimal-text-disabled-none;
    cursor: not-allowed;
  }
}

@mixin pt-dark-button-minimal() {
  background: $dark-minimal-button-background-color;
  box-shadow: none;
  color: inherit;

  &:hover,
  &:active,
  &.#{$ns}-active {
    background: none;
    box-shadow: none;
  }

  &:hover {
    background: $dark-minimal-button-background-color-hover;
  }

  &:active,
  &.#{$ns}-active {
    background: $dark-minimal-button-background-color-active;
    color: $pt-dark-text-color;
  }

  &:disabled,
  &:disabled:hover,
  &.#{$ns}-disabled,
  &.#{$ns}-disabled:hover {
    background: none;
    color: $pt-dark-text-color-disabled;
    cursor: not-allowed;

    &.#{$ns}-active {
      background: $dark-minimal-button-background-color-active;
    }
  }
}

@mixin pt-button-minimal-intent($text, $text-disabled, $hover, $active) {
  color: $text;

  &:hover,
  &:active,
  &.#{$ns}-active {
    background: none;
    box-shadow: none;
  }

  &:hover {
    background: $hover;
  }

  &:active,
  &.#{$ns}-active {
    background: $active;
  }

  &:disabled,
  &.#{$ns}-disabled {
    background: none;
    color: $text-disabled;
  }

  .#{$ns}-button-spinner .#{$ns}-spinner-head {
    stroke: $text;
  }
}

@mixin pt-button-minimal-divider() {
  $divider-height: $pt-grid-size * 2;
  background: $pt-divider-black;

  margin: ($pt-button-height - $divider-height) / 2;
  width: $minimal-button-divider-width;

  .#{$ns}-dark & {
    background: $pt-dark-divider-white;
  }
}

@mixin pt-button-outlined() {
  border: $button-outlined-width solid rgba($pt-text-color, 0.2);
  box-sizing: border-box;

  &:disabled,
  &.#{$ns}-disabled,
  &:disabled:hover,
  &.#{$ns}-disabled:hover {
    border-color: rgba($pt-text-color-disabled, 0.1);
  }

  .#{$ns}-dark & {
    @include pt-dark-button-outlined();
  }

  @each $intent, $colors in $hipa-button-intents {
    &.#{$ns}-intent-#{$intent} {
      @include pt-button-outlined-intent($colors...);
    }
  }
}

@mixin pt-dark-button-outlined() {
  border-color: rgba($white, 0.4);

  &:disabled,
  &:disabled:hover,
  &.#{$ns}-disabled,
  &.#{$ns}-disabled:hover {
    border-color: rgba($white, 0.2);
  }
}

@mixin pt-button-outlined-intent($border-color, $hover-color, $active-color, $disabled-color) {
  border-color: $border-color;
  color: $border-color;

  &:hover {
    border-color: $hover-color;
  }

  &:active {
    border-color: $active-color;
  }
  &:disabled,
  &.#{$ns}-disabled {
    border-color: $disabled-color;
    color: $disabled-color;
  }

  .#{$ns}-dark & {
    border-color: rgba($border-color, $button-outlined-border-intent-opacity);

    &:disabled,
    &.#{$ns}-disabled {
      border-color: rgba($border-color, $button-outlined-border-disabled-intent-opacity);
    }
  }
}
